# SPDX-FileCopyrightText: The djio authors
# SPDX-License-Identifier: MPL-2.0

[package]
name = "djio"
description = "DJ Hardware Control(ler) Support"
version = "0.0.19"
license = "MPL-2.0"
readme = "README.md"
repository = "https://github.com/uklotzde/djio"
keywords = ["dj", "controller", "midi", "hid"]
categories = ["hardware-support"]
rust-version = "1.82"
edition = "2021"
include = ["README.md", "LICENSES", "src/"]

[dependencies]
anyhow = "1.0.89"
derive_more = { version = "1.0.0", features = [
    "display",
    "from",
    "deref",
    "deref_mut",
] }
float-cmp = "0.10.0"
futures-core = { version = "0.3.31", default-features = false }
futures-util = { version = "0.3.31", default-features = false, features = [
    "std",
] }
log = "0.4.22"
strum = { version = "0.26.3", features = ["derive"] }
thiserror = "1.0.64"

# Optional dependencies
discro = { version = "0.29.3", optional = true }
midir = { version = "0.10.0", optional = true }
tokio = { version = "1.40.0", default-features = false, optional = true }

# Optional dependencies (experimental features)
crossbeam-utils = { version = "0.8.20", optional = true }
enum-as-inner = { version = "0.6.1", optional = true }

# Target dependent dependencies
[target.'cfg(not(target_family = "wasm"))'.dependencies]
hidapi = { version = "2.6.3", optional = true }

[dev-dependencies]
anyhow = "1.0.89"
hidapi = "2.6.3"
pretty_env_logger = "0.5.0"

[features]
# All cross-platform features are enabled by default.
default = [
    "all-controllers",
    "midir",
    "observables",
    "blinking-led-task-tokio-rt",
    "controller-thread",
]
midi = []
midir = ["dep:midir"]
jack = ["midir?/jack"]
hid = ["dep:hidapi"]
tokio = ["dep:tokio", "discro?/tokio"]
observables = ["dep:discro"]
blinking-led-task = ["dep:discro", "tokio", "tokio/time"]
blinking-led-task-tokio-rt = ["blinking-led-task", "tokio/rt"]
controller-thread = ["tokio", "tokio/rt", "tokio/time"]

# Controller support features
# TODO: Extract each controller into a separate crate after the API has settled.
all-controllers = ["midi-controllers", "hid-controllers"]
# MIDI controllers
midi-controllers = ["denon-dj-mc6000mk2", "korg-kaoss-dj", "pioneer-ddj-400"]
denon-dj-mc6000mk2 = ["midi"]
korg-kaoss-dj = ["midi"]
pioneer-ddj-400 = ["midi"]
# HID controllers
hid-controllers = ["ni-traktor-kontrol-s4mk3"]
ni-traktor-kontrol-s4mk3 = ["hid"]

# Experimental features
experimental-param = ["dep:crossbeam-utils", "dep:enum-as-inner"]

[lints.rust]
future_incompatible = "warn"
let_underscore = "warn"
missing_debug_implementations = "warn"
rust_2018_idioms = "warn"
rust_2021_compatibility = "warn"
unreachable_pub = "warn"
unsafe_code = "warn"
unused = "warn"

[lints.clippy]
pedantic = "warn"
clone_on_ref_ptr = "warn"
missing_const_for_fn = "warn"
self_named_module_files = "warn"

# Workaround for <https://github.com/rust-lang/rust-clippy/issues/12270>
lint_groups_priority = "allow"

# Repetitions of module/type names occur frequently when using many
# modules for keeping the size of the source files handy. Often
# types have the same name as their parent module.
module_name_repetitions = "allow"

# Repeating the type name in `Default::default()` expressions
# is not needed as long as the context is obvious.
default_trait_access = "allow"

# The error types returned should be self-explanatory.
missing_errors_doc = "allow"

[[example]]
name = "midi-dj-controller-hotplug"
path = "examples/midi_dj_controller_hotplug.rs"
required-features = ["midi-controllers", "midir"]

[[example]]
name = "ni-traktor-kontrol-s4mk3"
path = "examples/ni_traktor_kontrol_s4mk3.rs"
required-features = ["ni-traktor-kontrol-s4mk3"]
